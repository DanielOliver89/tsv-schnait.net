##
# "Image" element
#
prototype(tsv.schnait:Image) < prototype(Neos.Neos:ContentComponent) {
    src = Neos.Neos:ImageUri {
        @if.hasAsset = ${this.asset}
        asset = ${q(node).property('image')}
    }
    alt = ${q(node).property('alternativeText')}
    title = ${q(node).property('title')}
    hasCaption = ${q(node).property('hasCaption')}
    caption = Neos.Neos:Editable {
        property = 'caption'
    }
    # Link-URI nur setzen wenn eine link property existiert und nicht leer ist
    link = ${q(node).property('link') ? (String.indexOf(q(node).property('link'), '://') == -1 ? 'https://' + q(node).property('link') : q(node).property('link')) : null}
    
    # Backend-Status weitergeben
    inBackend = ${node.context.inBackend}

    renderDummyImage = ${node.context.inBackend}

    renderer = afx`<tsv.schnait:Presentation.Image {...props} />`
}